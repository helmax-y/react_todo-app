{"version":3,"sources":["components/TodoItem.js","components/TodoList.js","components/TodosFilter.js","TodoApp.js","index.js"],"names":["TodoItem","_ref","todo","i","isCompleted","deleteTodo","react_default","a","createElement","className","completed","type","checked","onChange","event","target","id","title","onClick","TodoList","todos","map","components_TodoItem","key","TodosFilter","filter","setFilter","href","TodoApp","state","todoToAdd","_this","setState","index","el","todoId","currentTodo","Object","objectSpread2","selectAll","this","trim","concat","toConsumableArray","Date","todosFiltered","_this2","onSubmit","addNew","placeholder","value","style","length","display","every","htmlFor","components_TodoList","reduce","amount","components_TodosFilter","some","React","Component","ReactDOM","render","src_TodoApp","document","getElementById"],"mappings":"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","file":"static/js/main.4c21524c.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TodoItem = ({ todo, i, isCompleted, deleteTodo }) => (\n  <li className={todo.completed ? 'completed' : ''}>\n    <div className=\"view\">\n      <input\n        type=\"checkbox\"\n        className=\"toggle\"\n        checked={todo.completed}\n        onChange={event => isCompleted(event.target.checked, todo.id)}\n      />\n      {/* eslint-disable-next-line */}\n      <label>{todo.title}</label>\n      <button\n        type=\"button\"\n        className=\"destroy\"\n        onClick={() => deleteTodo(i)}\n      />\n    </div>\n  </li>\n);\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    title: PropTypes.string,\n    id: PropTypes.number,\n    completed: PropTypes.bool,\n  }).isRequired,\n  i: PropTypes.number.isRequired,\n  isCompleted: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nconst TodoList = ({ todos, isCompleted, deleteTodo }) => (\n  <ul className=\"todo-list\">\n    {todos.map((todo, i) => (\n      <TodoItem\n        key={todo.id}\n        todo={todo}\n        i={i}\n        isCompleted={isCompleted}\n        deleteTodo={deleteTodo}\n      />\n    ))}\n  </ul>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  isCompleted: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TodosFilter = ({ filter, setFilter }) => (\n  <ul className=\"filters\">\n    <li>\n      <a\n        href=\"#/\"\n        className={filter ? '' : 'selected'}\n        onClick={() => setFilter('')}\n      >\n        All\n      </a>\n    </li>\n\n    <li>\n      <a\n        href=\"#/active\"\n        className={filter === 'active' ? 'selected' : ''}\n        onClick={() => setFilter('active')}\n      >\n        Active\n      </a>\n    </li>\n\n    <li>\n      <a\n        href=\"#/completed\"\n        className={filter === 'completed' ? 'selected' : ''}\n        onClick={() => setFilter('completed')}\n      >\n        Completed\n      </a>\n    </li>\n  </ul>\n);\n\nTodosFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  setFilter: PropTypes.func.isRequired,\n};\n\nexport default TodosFilter;\n","import React from 'react';\nimport TodoList from './components/TodoList';\nimport TodosFilter from './components/TodosFilter';\n\nclass TodoApp extends React.Component {\n  state = {\n    todos: [],\n    todoToAdd: '',\n    filter: '',\n  }\n\n  setFilter = (filter) => {\n    this.setState({\n      filter,\n    });\n  }\n\n  deleteTodo = (index) => {\n    this.setState(state => ({\n      todos: state.todos.filter((el, i) => i !== index),\n    }));\n  }\n\n  isCompleted = (completed, todoId) => {\n    this.setState(state => ({\n      todos: state.todos.map((currentTodo) => {\n        if (currentTodo.id !== todoId) {\n          return currentTodo;\n        }\n\n        return ({\n          ...currentTodo,\n          completed,\n        });\n      }),\n    }));\n  }\n\n  selectAll = (completed) => {\n    this.setState(state => ({\n      todos: state.todos.map(todo => ({\n        ...todo,\n        completed,\n      })),\n    }));\n  }\n\n  addNew() {\n    if (!this.state.todoToAdd.trim()) {\n      return;\n    }\n\n    this.setState(state => ({\n      todos: [\n        ...state.todos,\n        {\n          title: state.todoToAdd,\n          id: +new Date(),\n          completed: false,\n        },\n      ],\n      todoToAdd: '',\n    }));\n  }\n\n  render() {\n    let todosFiltered;\n\n    switch (this.state.filter) {\n      case 'active':\n        todosFiltered = this.state.todos.filter(todo => !todo.completed);\n        break;\n      case 'completed':\n        todosFiltered = this.state.todos.filter(todo => todo.completed);\n        break;\n      default:\n        todosFiltered = this.state.todos;\n    }\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n\n          <form onSubmit={() => this.addNew()}>\n            <input\n              className=\"new-todo\"\n              placeholder=\"What needs to be done?\"\n              value={this.state.todoToAdd}\n              onChange={event => this.setState({\n                todoToAdd: event.target.value,\n              })}\n            />\n          </form>\n        </header>\n\n        <section\n          className=\"main\"\n          style={this.state.todos.length > 0\n            ? { display: 'block' }\n            : { display: 'none' }}\n        >\n          <input\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            checked={this.state.todos.every(todo => todo.completed)}\n            onChange={event => this.selectAll(event.target.checked)}\n          />\n          {/* eslint-disable-next-line */}\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n          <TodoList\n            todos={todosFiltered}\n            isCompleted={this.isCompleted}\n            deleteTodo={this.deleteTodo}\n          />\n        </section>\n\n        <footer\n          className=\"footer\"\n          style={this.state.todos.length > 0\n            ? { display: 'block' }\n            : { display: 'none' }}\n        >\n          <span className=\"todo-count\">\n            {this.state.todos.reduce((amount, todo) => (todo.completed\n              ? amount\n              : amount + 1\n            ), 0)}\n            {' '}\n            items left\n          </span>\n\n          <TodosFilter\n            filter={this.state.filter}\n            setFilter={this.setFilter}\n          />\n\n          {this.state.todos.some(todo => todo.completed) && (\n            <button\n              type=\"button\"\n              className=\"clear-completed\"\n              style={{ display: 'block' }}\n              onClick={() => this.setState(state => ({\n                todos: state.todos.filter(todo => !todo.completed),\n              }))}\n            >\n              Clear completed\n            </button>\n          )}\n        </footer>\n      </section>\n    );\n  }\n}\n\nexport default TodoApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport TodoApp from './TodoApp';\n\nReactDOM.render(\n  <TodoApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}