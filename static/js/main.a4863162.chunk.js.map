{"version":3,"sources":["components/TodoHeader.js","components/TodoEdit.js","components/TodoItem.js","components/TodoList.js","components/TodoMain.js","components/TodoFilter.js","components/TodoFooter.js","TodoApp.js","index.js"],"names":["TodoHeader","state","todoToAdd","_this2","this","react_default","a","createElement","className","onSubmit","event","trim","preventDefault","props","addNewTodo","setState","placeholder","value","onChange","target","React","Component","TodoEdit","editValue","_this","title","cancelEditing","type","key","turnOffEditing","document","querySelector","fixTodo","id","focus","addEventListener","removeEventListener","TodoItem","editing","_this$props","todo","isCompleted","deleteTodo","liClass","ClassNames","completed","checked","htmlFor","onDoubleClick","onClick","components_TodoEdit","TodoList","_ref","todos","map","components_TodoItem","TodoMain","selectAll","todosFiltered","style","length","display","every","components_TodoList","TodoFilter","show","setFilter","linkAllClass","selected","linkActivelClass","linkCompletedClass","href","TodoFooter","clearCompleted","reduce","amount","components_TodoFilter","some","FILTER_TYPES","all","active","TodoApp","filter","Object","objectSpread2","todoId","currentTodo","concat","toConsumableArray","Date","components_TodoHeader","components_TodoMain","components_TodoFooter","ReactDOM","render","src_TodoApp","getElementById"],"mappings":"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","file":"static/js/main.a4863162.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass TodoHeader extends React.Component {\n  state = {\n    todoToAdd: '',\n  }\n\n  render() {\n    return (\n      <header className=\"header\">\n        <h1>todos</h1>\n\n        <form\n          onSubmit={(event) => {\n            if (this.state.todoToAdd.trim()) {\n              event.preventDefault();\n              this.props.addNewTodo(this.state.todoToAdd);\n              this.setState({ todoToAdd: '' });\n            }\n          }}\n        >\n          <input\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            value={this.state.todoToAdd}\n            onChange={event => this.setState({\n              todoToAdd: event.target.value,\n            })}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nTodoHeader.propTypes = {\n  addNewTodo: PropTypes.func.isRequired,\n};\n\nexport default TodoHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass TodoEdit extends React.Component {\n  state = {\n    editValue: this.props.title,\n  }\n\n  componentDidMount() {\n    document.querySelector('.edit').focus();\n    document.addEventListener('click', this.cancelEditing);\n    document.addEventListener('keyup', this.cancelEditing);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('click', this.cancelEditing);\n    document.removeEventListener('keyup', this.cancelEditing);\n  }\n\n  cancelEditing = (event) => {\n    if (event.type === 'keyup' && event.key === 'Escape') {\n      this.props.turnOffEditing();\n    } else if (event.type === 'click'\n      && event.target !== document.querySelector('.edit')) {\n      this.props.fixTodo(this.state.editValue, this.props.id);\n      this.props.turnOffEditing();\n    }\n  }\n\n  render() {\n    return (\n      <form\n        onSubmit={() => {\n          this.props.fixTodo(this.state.editValue, this.props.id);\n          this.setState({\n            editValue: '',\n          });\n          this.props.turnOffEditing();\n        }}\n      >\n        <input\n          className=\"edit\"\n          value={this.state.editValue}\n          onChange={event => this.setState({ editValue: event.target.value })}\n        />\n      </form>\n    );\n  }\n}\n\nTodoEdit.propTypes = {\n  title: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n  fixTodo: PropTypes.func.isRequired,\n  turnOffEditing: PropTypes.func.isRequired,\n};\n\nexport default TodoEdit;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClassNames from 'classnames';\nimport TodoEdit from './TodoEdit';\n\nclass TodoItem extends React.Component {\n  state = {\n    editing: false,\n  }\n\n  turnOffEditing = () => {\n    this.setState({\n      editing: false,\n    });\n  }\n\n  render() {\n    const { todo, isCompleted, deleteTodo, fixTodo } = this.props;\n    const liClass = ClassNames(\n      { completed: todo.completed },\n      { editing: this.state.editing }\n    );\n\n    return (\n      <li className={liClass}>\n        <div className=\"view\">\n          <input\n            id={todo.id}\n            type=\"checkbox\"\n            className=\"toggle\"\n            checked={todo.completed}\n            onChange={event => isCompleted(event.target.checked, todo.id)}\n          />\n          {/* eslint-disable-next-line */}\n          <label\n            htmlFor={todo.id}\n            onDoubleClick={() => this.setState({ editing: true })}\n          >\n            {todo.title}\n          </label>\n          <button\n            type=\"button\"\n            className=\"destroy\"\n            onClick={() => deleteTodo(todo.id)}\n          />\n        </div>\n        {this.state.editing && (\n          <TodoEdit\n            title={this.props.todo.title}\n            id={this.props.todo.id}\n            fixTodo={fixTodo}\n            turnOffEditing={this.turnOffEditing}\n          />\n        )}\n      </li>\n    );\n  }\n}\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    title: PropTypes.string,\n    id: PropTypes.number,\n    completed: PropTypes.bool,\n  }).isRequired,\n  isCompleted: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  fixTodo: PropTypes.func.isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nconst TodoList = ({ todos, isCompleted, deleteTodo, fixTodo }) => (\n  <ul className=\"todo-list\">\n    {todos.map(todo => (\n      <TodoItem\n        key={todo.id}\n        todo={todo}\n        isCompleted={isCompleted}\n        deleteTodo={deleteTodo}\n        fixTodo={fixTodo}\n      />\n    ))}\n  </ul>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  isCompleted: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  fixTodo: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoList from './TodoList';\n\nconst TodoMain = ({\n  todos,\n  selectAll,\n  todosFiltered,\n  isCompleted,\n  deleteTodo,\n  fixTodo,\n}) => (\n  <section\n    className=\"main\"\n    style={todos.length > 0\n      ? { display: 'block' }\n      : { display: 'none' }\n    }\n  >\n    <input\n      type=\"checkbox\"\n      id=\"toggle-all\"\n      className=\"toggle-all\"\n      checked={todos.every(todo => todo.completed)}\n      onChange={event => selectAll(event.target.checked)}\n    />\n    {/* eslint-disable-next-line */}\n    <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n    <TodoList\n      todos={todosFiltered}\n      isCompleted={isCompleted}\n      deleteTodo={deleteTodo}\n      fixTodo={fixTodo}\n    />\n  </section>\n);\n\nTodoMain.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    completed: PropTypes.bool.isRequired,\n  })).isRequired,\n  selectAll: PropTypes.func.isRequired,\n  todosFiltered: PropTypes.arrayOf(PropTypes.object).isRequired,\n  isCompleted: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  fixTodo: PropTypes.func.isRequired,\n};\n\nexport default TodoMain;\n","import React from 'react';\nimport ClassNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nconst TodoFilter = ({ show, setFilter }) => {\n  const linkAllClass = ClassNames(\n    { selected: show === 'all' }\n  );\n  const linkActivelClass = ClassNames(\n    { selected: show === 'active' }\n  );\n  const linkCompletedClass = ClassNames(\n    { selected: show === 'completed' }\n  );\n\n  return (\n    <ul className=\"filters\">\n      <li>\n        <a\n          href=\"#/\"\n          className={linkAllClass}\n          onClick={() => setFilter('all')}\n        >\n          All\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/active\"\n          className={linkActivelClass}\n          onClick={() => setFilter('active')}\n        >\n          Active\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/completed\"\n          className={linkCompletedClass}\n          onClick={() => setFilter('completed')}\n        >\n          Completed\n        </a>\n      </li>\n    </ul>\n  );\n};\n\nTodoFilter.propTypes = {\n  show: PropTypes.string.isRequired,\n  setFilter: PropTypes.func.isRequired,\n};\n\nexport default TodoFilter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoFilter from './TodoFilter';\n\nconst TodoFooter = ({ todos, clearCompleted, show, setFilter }) => (\n  <footer\n    className=\"footer\"\n    style={todos.length > 0\n      ? { display: 'block' }\n      : { display: 'none' }}\n  >\n    <span className=\"todo-count\">\n      {todos.reduce((amount, todo) => (todo.completed\n        ? amount\n        : amount + 1\n      ), 0)}\n      {' '}\n      items left\n    </span>\n\n    <TodoFilter\n      show={show}\n      setFilter={setFilter}\n    />\n\n    {todos.some(todo => todo.completed) && (\n      <button\n        type=\"button\"\n        className=\"clear-completed\"\n        style={{ display: 'block' }}\n        onClick={clearCompleted}\n      >\n        Clear completed\n      </button>\n    )}\n  </footer>\n);\n\nTodoFooter.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    completed: PropTypes.bool.isRequired,\n  })).isRequired,\n  clearCompleted: PropTypes.func.isRequired,\n  show: PropTypes.string.isRequired,\n  setFilter: PropTypes.func.isRequired,\n};\n\nexport default TodoFooter;\n","import React from 'react';\nimport TodoHeader from './components/TodoHeader';\nimport TodoMain from './components/TodoMain';\nimport TodoFooter from './components/TodoFooter';\n\nconst FILTER_TYPES = {\n  all: 'all',\n  completed: 'completed',\n  active: 'active',\n};\n\nclass TodoApp extends React.Component {\n  state = {\n    todos: [],\n    show: FILTER_TYPES.all,\n  }\n\n  setFilter = (show) => {\n    this.setState({\n      show: FILTER_TYPES[show],\n    });\n  }\n\n  deleteTodo = (id) => {\n    this.setState(state => ({\n      todos: state.todos.filter(todo => todo.id !== id),\n    }));\n  }\n\n  fixTodo = (title, id) => {\n    if (!title.trim()) {\n      this.deleteTodo(id);\n    } else {\n      this.setState(state => ({\n        todos: state.todos.map(todo => (todo.id !== id\n          ? todo\n          : {\n            ...todo,\n            title,\n          }\n        )),\n      }));\n    }\n  }\n\n  isCompleted = (completed, todoId) => {\n    this.setState(state => ({\n      todos: state.todos.map((currentTodo) => {\n        if (currentTodo.id !== todoId) {\n          return currentTodo;\n        }\n\n        return ({\n          ...currentTodo,\n          completed,\n        });\n      }),\n    }));\n  }\n\n  selectAll = (completed) => {\n    this.setState(state => ({\n      todos: state.todos.map(todo => ({\n        ...todo,\n        completed,\n      })),\n    }));\n  }\n\n  addNewTodo = (title) => {\n    this.setState(state => ({\n      todos: [\n        ...state.todos,\n        {\n          title,\n          id: +new Date(),\n          completed: false,\n        },\n      ],\n    }));\n  }\n\n  clearCompleted = () => {\n    this.setState(state => ({\n      todos: state.todos.filter(todo => !todo.completed),\n    }));\n  }\n\n  render() {\n    const todosFiltered = (() => {\n      switch (this.state.show) {\n        case 'active':\n          return this.state.todos.filter(todo => !todo.completed);\n        case 'completed':\n          return this.state.todos.filter(todo => todo.completed);\n        default:\n          return this.state.todos;\n      }\n    })();\n\n    return (\n      <section className=\"todoapp\">\n        <TodoHeader\n          addNewTodo={this.addNewTodo}\n        />\n\n        <TodoMain\n          todos={this.state.todos}\n          selectAll={this.selectAll}\n          todosFiltered={todosFiltered}\n          isCompleted={this.isCompleted}\n          deleteTodo={this.deleteTodo}\n          fixTodo={this.fixTodo}\n        />\n\n        <TodoFooter\n          todos={this.state.todos}\n          clearCompleted={this.clearCompleted}\n          show={this.state.show}\n          setFilter={this.setFilter}\n        />\n      </section>\n    );\n  }\n}\n\nexport default TodoApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport TodoApp from './TodoApp';\n\nReactDOM.render(\n  <TodoApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}